---
layout: post
title: Scaling Publish-Subscribe to a Trillion Topics
date: 2017-09-25 12:00:00
authors:
  - Reza Karimi
keywords:
  - Publish-Subscribe
  - pub-sub
---

### Reza Karimi, Gregory Chockler, Ymir Vigfusson

## What is it?

Increasing number of large scale applications such as online gaming, messaging, social networking which are typically characterized by a large number of participants exchanging messages in a large scale, call for Publish-Subscribe systems that are able to efficiently support a very large set of topics.
 Moreover, the growing number of Internet-connected devices including vehicles,  buildings, home appliances, wearable and mobile devices with large number of built-in sensors and so on, which has a stunning prediction of 50 billion connected devices by 2020, reflects the real need for supporting a huge number of topics by pub-sub systems.
Our system leverages the idea of filtering out the messages being published into topics without any subscribers in order to utilize the resources to deliver the messages published to topics which are of interest. Also, it employs a hybrid memory/disk scheme to store the messages to avoid the slowdown caused by binding to disks. 

## How does it work?

Increasing number of large scale applications such as online gaming, messaging, social networking which are typically characterized by a large number of participants exchanging messages in a large scale, call for Publish-Subscribe systems that are able to efficiently support a very large set of topics.
 Moreover, the growing number of Internet-connected devices including vehicles,  buildings, home appliances, wearable and mobile devices with large number of built-in sensors and so on, which has a stunning prediction of 50 billion connected devices by 2020, reflects the real need for supporting a huge number of topics by pub-sub systems.
Our system leverages the idea of filtering out the messages being published into topics without any subscribers in order to utilize the resources to deliver the messages published to topics which are of interest. Also, it employs a hybrid memory/disk scheme to store the messages to avoid the slowdown caused by binding to disks. 

<table>
    <tr>
      <td><a href="">Download</a></td>
      <td>Download the code</td>
    </tr>
    <tr>
      <td><a href="">Approach</a></td>
      <td>An overview of the system design. </td>
    </tr>
    <tr>
      <td><a href="">Papers</a></td>
      <td>Paper trail.</td>
    </tr>
    <tr>
      <td><a href="">Support</a></td>
      <td>Our sources of research support.</td>
    </tr>
    <tr>
      <td><a href="">People</a></td>
      <td>Project members.</td>
    </tr>
</table>




Â 
